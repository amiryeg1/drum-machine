{"version":3,"sources":["logo.svg","store/audio-string-slice.js","components/Drum_Pad.js","audio/Q.mp3","audio/W.mp3","audio/E.mp3","audio/A.mp3","audio/S.mp3","audio/D.mp3","audio/Z.mp3","audio/X.mp3","audio/C.mp3","components/Drum_pad_container.js","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["audioStringSlice","createSlice","name","initialState","value","reducers","setAudioString","state","action","payload","actions","DrumPad","props","audio","dispatch","useDispatch","useEffect","document","getElementById","keyWord","className","onKeyDown","event","keyList","includes","key","toUpperCase","style","background","borderColor","onKeyPress","click","onKeyUp","id","onClick","play","type","src","DrumPadContainer","class","QAud","WAud","EAud","AAud","SAud","DAud","ZAud","XAud","CAud","App","audioString","useSelector","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","audioStringReducer","ReactDOM","render"],"mappings":"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","file":"static/js/main.49180ca7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n    value: \"________\"\n}\nconst audioStringSlice = createSlice({\n    name: \"audio\",\n    initialState,\n    reducers: {\n        setAudioString: (state,action) =>{\n            state.value = action.payload\n        }\n    }\n})\n\nexport const {setAudioString} = audioStringSlice.actions;\nexport default audioStringSlice.reducer;","import { useEffect } from \"react\";\nimport { keyList } from \"./Drum_pad_container\";\nimport \"./drum-pad.css\";\nimport { useDispatch } from \"react-redux\";\nimport { setAudioString } from \"../store/audio-string-slice\";\n\n\nconst DrumPad = (props) => {\nconst dispatch = useDispatch()\n  var audio;\n\n  useEffect(() => {\n    audio = document.getElementById(props.keyWord);\n  });\n  const playAudio = () => {\n    dispatch(setAudioString(props.id))\n    audio.play();\n  };\n\n  const handleKeyPress = (event) => {\n    if (keyList.includes(event.key.toUpperCase())) {\n      document.getElementById(event.key.toUpperCase()).click();\n    }\n  };\n\n  const handleKeyDown = (event) => {\n    if (keyList.includes(event.key.toUpperCase())) {\n      document.getElementById(\n        \"pad-\" + event.key.toUpperCase()\n      ).style.background = \"#741188\";\n      document.getElementById(\n        \"pad-\" + event.key.toUpperCase()\n      ).style.borderColor = \"#9c919e\";\n    }\n  };\n\n  const handleKeyUp = (event) => {\n    if (keyList.includes(event.key.toUpperCase())) {\n      document.getElementById(\n        \"pad-\" + event.key.toUpperCase()\n      ).style.background = \"#4f005f\";\n      document.getElementById(\n        \"pad-\" + event.key.toUpperCase()\n      ).style.borderColor = \"#9c919e\";\n    }\n  };\n\n  return (\n    <button\n      className=\"drum-pad\"\n      onKeyDown={handleKeyDown}\n      onKeyPress={handleKeyPress}\n      onKeyUp={handleKeyUp}\n      id={props.id}\n      onClick={playAudio}\n    >\n      <audio\n        type=\"audio/mpeg\"\n        src={props.audio}\n        className=\"clip\"\n        id={props.keyWord}\n      ></audio>\n      {props.keyWord}\n    </button>\n  );\n};\n\nexport default DrumPad;\n","export default __webpack_public_path__ + \"static/media/Q.ef60879b.mp3\";","export default __webpack_public_path__ + \"static/media/W.f16ebcd5.mp3\";","export default __webpack_public_path__ + \"static/media/E.c58edd71.mp3\";","export default __webpack_public_path__ + \"static/media/A.c58edd71.mp3\";","export default __webpack_public_path__ + \"static/media/S.a38d6a12.mp3\";","export default __webpack_public_path__ + \"static/media/D.9a433c54.mp3\";","export default __webpack_public_path__ + \"static/media/Z.112c5ae9.mp3\";","export default __webpack_public_path__ + \"static/media/X.72cc79ed.mp3\";","export default __webpack_public_path__ + \"static/media/C.5eef03e2.mp3\";","import DrumPad from \"./Drum_Pad\";\nimport \"./drum-pad-container.css\"\nimport QAud from \"../audio/Q.mp3\";\nimport WAud from \"../audio/W.mp3\";\nimport EAud from \"../audio/E.mp3\";\nimport AAud from \"../audio/A.mp3\";\nimport SAud from \"../audio/S.mp3\";\nimport DAud from \"../audio/D.mp3\";\nimport ZAud from \"../audio/Z.mp3\";\nimport XAud from \"../audio/X.mp3\";\nimport CAud from \"../audio/C.mp3\";\nexport const keyList = [\"Q\", \"W\", \"E\", \"A\", \"S\", \"D\", \"Z\", \"X\", \"C\"];\nconst DrumPadContainer = () => {\n  return (\n    <div class=\"drum-pad-container\">\n      <DrumPad id=\"pad-Q\" keyWord={keyList[0]} audio={QAud} />\n      <DrumPad id=\"pad-W\" keyWord={keyList[1]} audio={WAud} />\n      <DrumPad id=\"pad-E\" keyWord={keyList[2]} audio={EAud} />\n      <DrumPad id=\"pad-A\" keyWord={keyList[3]} audio={AAud} />\n      <DrumPad id=\"pad-S\" keyWord={keyList[4]} audio={SAud} />\n      <DrumPad id=\"pad-D\" keyWord={keyList[5]} audio={DAud} />\n      <DrumPad id=\"pad-Z\" keyWord={keyList[6]} audio={ZAud} />\n      <DrumPad id=\"pad-X\" keyWord={keyList[7]} audio={XAud} />\n      <DrumPad id=\"pad-C\" keyWord={keyList[8]} audio={CAud} />\n    </div>\n  );\n};\n\nexport default DrumPadContainer;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport DrumPadContainer from \"./components/Drum_pad_container\";\nimport { useSelector } from \"react-redux\";\nfunction App() {\n  const audioString = useSelector((event) => event.audio.value);\n  return (\n    <div className=\"App\" id=\"drum-machine\">\n      <h1>drum machine</h1>\n      <DrumPadContainer />\n      <br/>\n      <span id=\"display\">{audioString}</span>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {configureStore} from \"@reduxjs/toolkit\"\nimport audioStringReducer from \"./audio-string-slice\"\nconst store = configureStore({\n    reducer: {\n        audio: audioStringReducer\n    }\n})\n\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}